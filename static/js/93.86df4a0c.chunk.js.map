{"version":3,"file":"static/js/93.86df4a0c.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,GAAAA,GAAH,0JAURC,EAAWD,EAAAA,GAAAA,GAAH,qOAYRE,EAAoBF,EAAAA,GAAAA,IAAH,+IAQjBG,EAAWH,EAAAA,GAAAA,KAAH,0GAORI,EAAYJ,EAAAA,GAAAA,KAAH,6D,SC3BP,SAASK,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6GAEIC,EAAAA,GAAcJ,GAFlB,OAERK,EAFQ,OAGdN,EAAQM,EAAIP,MAHE,gDAKdQ,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,KAGF,yBACGF,EAAKU,OAAS,GACb,SAAClB,EAAD,UACGQ,EAAKW,KAAI,SAAAC,GAAI,iBACZ,UAAClB,EAAD,YACE,gBACEmB,IACED,EAAKE,aAAL,6CAC0CF,EAAKE,cAC3CC,EAENC,IAAKJ,EAAKK,UAAYL,EAAKK,UAAYL,EAAKM,cAC5CC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAEnC,UAAC1B,EAAD,YACE,SAACE,EAAD,UAAW,UACX,SAACD,EAAD,8BAAWgB,EAAKU,YAAhB,QAAwBV,EAAKM,qBAA7B,QAA8C,UAC9C,SAACrB,EAAD,UAAW,eACX,SAACD,EAAD,UACGgB,EAAKK,UACFL,EAAKK,UADR,UAEGL,EAAKM,qBAFR,QAEyB,mBAjBjBN,EAAKW,QADR,OAyBhB,uBAAG,2CAIV,C,+LC1DKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBjB,EADsB,yBAErBA,EAAIoB,MAFiB,2CAAH,qDAIdC,EAAa,mCAAG,WAAM1B,GAAN,uFACTuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,oBAAkCsB,IADzB,cACrBjB,EADqB,yBAEpBA,EAAIoB,MAFgB,2CAAH,sDAKbE,EAAY,mCAAG,WAAM3B,GAAN,uFACRuB,EAAAA,EAAAA,IAAA,iBACNvB,EADM,4BACgBsB,EADhB,2BADQ,cACpBjB,EADoB,yBAInBA,EAAIoB,MAJe,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BO,IAFd,cACxBxB,EADwB,yBAIvBA,EAAIoB,MAJmB,2CAAH,sDAOhBK,EAAS,mCAAG,WAAM9B,GAAN,uFACLuB,EAAAA,EAAAA,IAAA,iBACNvB,EADM,4BACgBsB,EADhB,oBADK,cACjBjB,EADiB,yBAIhBA,EAAIoB,MAJY,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastInfo = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 5px;\n  max-width: 150px;\n  color: #242424;\n  font-size: 14px;\n`;\n\nexport const CastInfoConteiner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 10px;\n`;\n\nexport const CastName = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  margin: 5px 0;\n`;\n\nexport const CastTitle = styled.span`\n  font-weight: 300;\n  color: teal;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noImagePlaceholder from 'images/no-image-placeholder.jpg';\nimport * as API from 'services/api';\nimport {\n  CastList,\n  CastInfo,\n  CastInfoConteiner,\n  CastTitle,\n  CastName,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await API.castMovie(id);\n        setCast(res.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(item => (\n            <CastInfo key={item.cast_id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : noImagePlaceholder\n                }\n                alt={item.character ? item.character : item.original_name}\n                style={{ width: '150px', height: '225px' }}\n              />\n              <CastInfoConteiner>\n                <CastTitle>Name</CastTitle>\n                <CastName>{item.name ?? item.original_name ?? 'Name'}</CastName>\n                <CastTitle>Character</CastTitle>\n                <CastName>\n                  {item.character\n                    ? item.character\n                    : item.original_name ?? 'Character'}\n                </CastName>\n              </CastInfoConteiner>\n            </CastInfo>\n          ))}\n        </CastList>\n      ) : (\n        <p>Sorry, but the information is missing</p>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cc9b631238622852f6d169b666a44c3f';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n"],"names":["CastList","styled","CastInfo","CastInfoConteiner","CastName","CastTitle","Cast","useState","cast","setCast","id","useParams","useEffect","fetchData","API","res","console","log","length","map","item","src","profile_path","noImagePlaceholder","alt","character","original_name","style","width","height","name","cast_id","API_KEY","axios","searchTrending","data","searchMovieId","reviewsMovie","searchMovieTitle","title","castMovie"],"sourceRoot":""}