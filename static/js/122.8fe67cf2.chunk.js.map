{"version":3,"file":"static/js/122.8fe67cf2.chunk.js","mappings":"mUAEaA,EAAiBC,EAAAA,GAAAA,IAAH,8FAMdC,EAAcD,EAAAA,GAAAA,GAAH,4HAQXE,EAAcF,EAAAA,GAAAA,GAAH,qNAWXG,EAAmBH,EAAAA,GAAAA,IAAH,8GAOhBI,EAAeJ,EAAAA,GAAAA,KAAH,gGAMZK,EAAYL,EAAAA,GAAAA,EAAH,uF,yKC5BP,SAASM,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEQC,EAAAA,GAAiBJ,GAFzB,cAEJK,EAFI,OAGVN,EAAWM,EAAIC,SAHL,mDAMVC,QAAQC,IAAR,MANU,yDAAH,qDASXL,GACD,GAAE,CAACH,KAGF,SAAC,KAAD,UACsB,IAAnBF,EAAQW,QACP,SAAC,KAAD,UACGX,EAAQY,KAAI,SAAAC,GAAI,iBACf,UAAC,KAAD,YACE,gBACEC,IACED,EAAKE,eAAeC,YAChBH,EAAKE,eAAeC,YAAYC,SAAS,QACvCC,EADF,6CAEwCL,EAAKE,eAAeC,aAC5DE,EAENC,IAAKN,EAAKO,OACVC,MAAM,SAER,UAAC,KAAD,YACE,SAAC,KAAD,8BACGR,EAAKO,cADR,QACkBP,EAAKE,eAAeO,gBADtC,QACkD,YAElD,oCAAOT,EAAKU,eAAZ,QAAuB,qBAhBTV,EAAKX,GADR,OAuBnB,uBAAG,2CAIV,C,kMCzDKsB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBjB,EADsB,yBAErBA,EAAIoB,MAFiB,2CAAH,qDAIdC,EAAa,mCAAG,WAAM1B,GAAN,uFACTuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,oBAAkCsB,IADzB,cACrBjB,EADqB,yBAEpBA,EAAIoB,MAFgB,2CAAH,sDAKbE,EAAY,mCAAG,WAAM3B,GAAN,uFACRuB,EAAAA,EAAAA,IAAA,iBACNvB,EADM,4BACgBsB,EADhB,2BADQ,cACpBjB,EADoB,yBAInBA,EAAIoB,MAJe,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BO,IAFd,cACxBxB,EADwB,yBAIvBA,EAAIoB,MAJmB,2CAAH,sDAOhBK,EAAS,mCAAG,WAAM9B,GAAN,uFACLuB,EAAAA,EAAAA,IAAA,iBACNvB,EADM,4BACgBsB,EADhB,oBADK,cACjBjB,EADiB,yBAIhBA,EAAIoB,MAJY,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n  max-width: 100%;\n`;\n\nexport const ReviewsItem = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  box-shadow: 0px 0px 4px #242424;\n  overflow: hidden;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const ReviewsContainer = styled.div`\n  padding: 0 20px 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ReviewAuthor = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const NoRequest = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noImagePlaceholder from 'images/no-image-placeholder.jpg';\nimport * as API from 'services/api';\nimport {\n  ReviewsWrapper,\n  ReviewsList,\n  ReviewsItem,\n  ReviewsContainer,\n  ReviewAuthor,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.reviewsMovie(id);\n        setReviews(res.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <ReviewsWrapper>\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(item => (\n            <ReviewsItem key={item.id}>\n              <img\n                src={\n                  item.author_details.avatar_path\n                    ? item.author_details.avatar_path.includes('http')\n                      ? noImagePlaceholder\n                      : `https://image.tmdb.org/t/p/original${item.author_details.avatar_path}`\n                    : noImagePlaceholder\n                }\n                alt={item.author}\n                width=\"100\"\n              />\n              <ReviewsContainer>\n                <ReviewAuthor>\n                  {item.author ?? item.author_details.username ?? 'Author'}\n                </ReviewAuthor>\n                <span>{item.content ?? 'No comments'}</span>\n              </ReviewsContainer>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>Sorry, but the information is missing</p>\n      )}\n    </ReviewsWrapper>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cc9b631238622852f6d169b666a44c3f';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n"],"names":["ReviewsWrapper","styled","ReviewsList","ReviewsItem","ReviewsContainer","ReviewAuthor","NoRequest","Reviews","useState","reviews","setReviews","id","useParams","useEffect","fetch","API","res","results","console","log","length","map","item","src","author_details","avatar_path","includes","noImagePlaceholder","alt","author","width","username","content","API_KEY","axios","searchTrending","data","searchMovieId","reviewsMovie","searchMovieTitle","title","castMovie"],"sourceRoot":""}