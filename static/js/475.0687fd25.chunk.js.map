{"version":3,"file":"static/js/475.0687fd25.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,IAAH,uQ,gICCTC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iJASTG,EAAaH,EAAAA,GAAAA,GAAH,uKAUVI,EAAaJ,EAAAA,GAAAA,GAAH,iHAMVK,EAAeL,EAAAA,GAAAA,IAAH,wKASZM,EAAYN,EAAAA,GAAAA,EAAH,sF,SCzBP,SAASO,EAAT,GAAkC,IAAVC,EAAS,EAATA,MAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,WACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAS,IAAD,UACjB,OACE,SAACR,EAAD,WACE,SAACH,EAAD,CAAWY,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAApD,UACE,UAACJ,EAAD,YACE,0BACE,gBACEY,QAAQ,OACRC,IACEN,EAAKO,YAAL,6CAC0CP,EAAKO,aAC3CC,EAENC,IAAG,oBAAET,EAAKU,aAAP,QAAgBV,EAAKW,YAArB,QAA6BX,EAAKY,eACrCC,MAAM,MACNC,OAAO,WAGX,SAACpB,EAAD,wCACGM,EAAKU,aADR,QACiBV,EAAKW,YADtB,QAC8BX,EAAKY,sBADnC,QACqD,gBAjB1CZ,EAAKE,GAuBzB,OAIR,C,qJC3Cc,SAASa,IAEtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAK,mCAAG,6GAGQC,EAAAA,KAHR,cAGJC,EAHI,OAKVJ,EAAkBI,EAAIC,SALZ,mDAQVC,QAAQC,IAAR,MARU,yDAAH,qDAYXL,GACD,GAAE,KAID,iCACE,SAACM,EAAA,EAAD,CAAc9B,MAAOqB,IAAmB,MAI7C,C,kMC9BKU,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBL,EADsB,yBAErBA,EAAIQ,MAFiB,2CAAH,qDAIdC,EAAa,mCAAG,WAAM7B,GAAN,uFACT0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,oBAAkCyB,IADzB,cACrBL,EADqB,yBAEpBA,EAAIQ,MAFgB,2CAAH,sDAKbE,EAAY,mCAAG,WAAM9B,GAAN,uFACR0B,EAAAA,EAAAA,IAAA,iBACN1B,EADM,4BACgByB,EADhB,2BADQ,cACpBL,EADoB,yBAInBA,EAAIQ,MAJe,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMvB,GAAN,uFACZkB,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BjB,IAFd,cACxBY,EADwB,yBAIvBA,EAAIQ,MAJmB,2CAAH,sDAOhBI,EAAS,mCAAG,WAAMhC,GAAN,uFACL0B,EAAAA,EAAAA,IAAA,iBACN1B,EADM,4BACgByB,EADhB,oBADK,cACjBL,EADiB,yBAIhBA,EAAIQ,MAJY,2CAAH,qD","sources":["components/App/App.styled.jsx","components/Trending/Trending.styled.jsx","components/Trending/Trending.jsx","pages/Home/Home.js","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0 30px;\n  @media screen and (min-width: 768px) {\n    width: 760px;\n    margin: 0 auto;\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1140px;\n    margin: 0 auto;\n    padding: 0 30px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkMovie = styled(Link)`\n  text-decoration: none;\n  color: #242424;\n  transition: color 250ms ease-in-out;\n  &:hover {\n    color: teal;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const MoviesItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  text-align: center;\n`;\nexport const MovieWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  transition: box-shadow 250ms ease-in-out;\n  &:hover {\n    box-shadow: 0px 0px 15px teal;\n  }\n`;\n\nexport const MovieText = styled.p`\n  padding: 10px;\n  margin: 0;\n  background-color: #f8f8f8;\n`;\n","import { useLocation } from 'react-router-dom';\nimport noImagePlaceholder from 'images/no-image-placeholder.jpg';\nimport PropTypes from 'prop-types';\nimport { Container } from 'components/App/App.styled';\nimport {\n  MoviesList,\n  MoviesItem,\n  LinkMovie,\n  MovieWrapper,\n  MovieText,\n} from './Trending.styled';\n\nexport default function TrendingList({ items }) {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <MoviesList>\n        {items.map(item => {\n          return (\n            <MoviesItem key={item.id}>\n              <LinkMovie to={`/movies/${item.id}`} state={{ from: location }}>\n                <MovieWrapper>\n                  <div>\n                    <img\n                      loading=\"lazy\"\n                      src={\n                        item.poster_path\n                          ? `https://image.tmdb.org/t/p/original${item.poster_path}`\n                          : noImagePlaceholder\n                      }\n                      alt={item.title ?? item.name ?? item.original_title}\n                      width=\"200\"\n                      height=\"300\"\n                    />\n                  </div>\n                  <MovieText>\n                    {item.title ?? item.name ?? item.original_title ?? 'Title'}\n                  </MovieText>\n                </MovieWrapper>\n              </LinkMovie>\n            </MoviesItem>\n          );\n        })}\n      </MoviesList>\n    </Container>\n  );\n}\n\nTrendingList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport * as API from 'services/api';\nimport TrendingList from 'components/Trending';\n\nexport default function Home() {\n  // Створення стану для збереження списку популярних фільмів\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  // Використання useEffect для виклику функції після монтування компонента\n  useEffect(() => {\n    // Створення асинхронної функції fetch для отримання популярних фільмів\n    const fetch = async () => {\n      try {\n        // Виклик API.searchTrending() для отримання популярних фільмів\n        const res = await API.searchTrending();\n        // Оновлення стану trendingMovies зі списком популярних фільмів\n        setTrendingMovies(res.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    // Виклик функції fetch для отримання популярних фільмів при завантаженні компонента\n    fetch();\n  }, []); // Порожній масив залежностей означає, що ефект буде викликаний лише раз після монтування компонента\n\n  // Повернення JSX-розмітки компонента Home\n  return (\n    <>\n      <TrendingList items={trendingMovies} />{' '}\n      {/* Рендеринг компонента TrendingList з передачею списку популярних фільмів */}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cc9b631238622852f6d169b666a44c3f';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n"],"names":["Container","styled","LinkMovie","Link","MoviesList","MoviesItem","MovieWrapper","MovieText","TrendingList","items","location","useLocation","map","item","to","id","state","from","loading","src","poster_path","noImagePlaceholder","alt","title","name","original_title","width","height","Home","useState","trendingMovies","setTrendingMovies","useEffect","fetch","API","res","results","console","log","Trending","API_KEY","axios","searchTrending","data","searchMovieId","reviewsMovie","searchMovieTitle","castMovie"],"sourceRoot":""}