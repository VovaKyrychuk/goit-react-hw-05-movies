{"version":3,"file":"static/js/346.15685bb4.chunk.js","mappings":"wQAGe,SAASA,EAAT,GAA0C,IAC7C,QADoCC,EAAQ,EAARA,KAC9C,GAAIA,EACF,OACE,4BACE,0BACE,gBACEC,IACED,EAAKE,YAAL,6CAC0CF,EAAKE,aAC3CC,EAENC,IAAKJ,EAAKK,MACVC,MAAM,MACNC,OAAO,MACPC,QAAQ,YAGZ,4BACE,kCAAKR,EAAKK,aAAV,QAAmB,UACnB,yBAAG,gBAAcL,EAAKS,iBACtB,yBAAG,eAAH,UAAgBC,KAAKC,MAA0B,GAApBX,EAAKY,qBAAhC,QAAsD,EAAE,QACxD,wBAAI,cACJ,iCAAIZ,EAAKa,gBAAT,QAAqB,cACrB,wBAAI,YACJ,iCAAIb,EAAKc,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,YAA5C,QAAoD,gBAK7D,C,gCC9BYC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qM,SCOT,SAASE,IAAiB,IAAD,IACtC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOvB,EAAP,KAAawB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgBzC,OAdAC,EAAAA,EAAAA,UAAQ,WACN,IAAMC,EAAK,mCAAG,6GAEQC,EAAAA,GAAkBR,GAF1B,cAEJS,EAFI,OAGVZ,EAAQY,GACRV,EAAUU,EAAIX,QAJJ,mDAOVY,QAAQC,IAAR,MAPU,yDAAH,qDAUXJ,GACD,GAAE,CAACP,KAGF,2BACE,4BACE,SAACR,EAAD,CAAaoB,GAAIV,EAAjB,UACE,0BAAM,qBAGI,aAAXJ,GACC,iCACE,SAAC,EAAD,CAAczB,KAAMA,KACpB,mBACA,4BACE,SAACmB,EAAD,CAAaoB,GAAG,OAAOR,MAAO,CAAEC,KAAMH,GAAtC,SAAkD,UAGlD,SAACV,EAAD,CAAaoB,GAAG,UAAUR,MAAO,CAAEC,KAAMH,GAAzC,SAAqD,gBAIvD,SAAC,EAAAW,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,UAIJ,uBAAG,kCAKZ,C,+LC1DKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBN,EADsB,yBAErBA,EAAIpC,MAFiB,2CAAH,qDAId6C,EAAa,mCAAG,WAAMlB,GAAN,uFACTgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,oBAAkCe,IADzB,cACrBN,EADqB,yBAEpBA,EAAIpC,MAFgB,2CAAH,sDAKb8C,EAAY,mCAAG,WAAMnB,GAAN,uFACRgB,EAAAA,EAAAA,IAAA,iBACNhB,EADM,4BACgBe,EADhB,2BADQ,cACpBN,EADoB,yBAInBA,EAAIpC,MAJe,2CAAH,sDAOZ+C,EAAgB,mCAAG,WAAM1C,GAAN,uFACZsC,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BrC,IAFd,cACxB+B,EADwB,yBAIvBA,EAAIpC,MAJmB,2CAAH,sDAOhBgD,EAAS,mCAAG,WAAMrB,GAAN,uFACLgB,EAAAA,EAAAA,IAAA,iBACNhB,EADM,4BACgBe,EADhB,oBADK,cACjBN,EADiB,yBAIhBA,EAAIpC,MAJY,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MoviesDetails.styled.jsx","pages/MovieDetails/MovieDetails.js","services/api.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport noImagePlaceholder from 'images/no-image-placeholder.jpg';\n\nexport default function MovieDetailsComponent({ data }) {\n  if (data) {\n    return (\n      <div>\n        <div>\n          <img\n            src={\n              data.poster_path\n                ? `https://image.tmdb.org/t/p/original${data.poster_path}`\n                : noImagePlaceholder\n            }\n            alt={data.title}\n            width=\"300\"\n            height=\"450\"\n            loading=\"lazy\"\n          />\n        </div>\n        <div>\n          <h2>{data.title ?? 'Name'}</h2>\n          <p>Release date {data.release_date}</p>\n          <p>User Score: {Math.round(data.vote_average * 10) ?? 0}%</p>\n          <h3>Overview</h3>\n          <p>{data.overview ?? 'Overview'}</p>\n          <h3>Genres</h3>\n          <p>{data.genres.map(item => item.name).join(' ') ?? 'Genres'}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetailsComponent.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const LinkDetails = styled(Link)`\n  position: relative;\n  text-decoration: none;\n  font-size: 16px;\n  padding: 5px 10px 5px 30px;\n  background-color: #f8f8f8;\n  border-radius: 10px;\n  color: #242424;\n`;\n","import { useState, useMemo } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport Loading from 'components/Loader';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport { LinkDetails } from './MoviesDetails.styled';\n\nimport * as API from 'services/api';\n\nexport default function MoviesDetails() {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState('');\n\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useMemo(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.searchMovieId(id);\n        setData(res);\n        setStatus(res.status);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <main>\n      <div>\n        <LinkDetails to={backLink}>\n          <span>Back to Movies</span>\n        </LinkDetails>\n\n        {status === 'Released' ? (\n          <>\n            <MovieDetails data={data} />\n            <hr />\n            <div>\n              <LinkDetails to=\"cast\" state={{ from: backLink }}>\n                Cast\n              </LinkDetails>\n              <LinkDetails to=\"reviews\" state={{ from: backLink }}>\n                Reviews\n              </LinkDetails>\n            </div>\n            <Suspense fallback={<Loading />}>\n              <Outlet />\n            </Suspense>\n          </>\n        ) : (\n          <p>Sorry, but page Not Found</p>\n        )}\n      </div>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'cc9b631238622852f6d169b666a44c3f';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n"],"names":["MovieDetailsComponent","data","src","poster_path","noImagePlaceholder","alt","title","width","height","loading","release_date","Math","round","vote_average","overview","genres","map","item","name","join","LinkDetails","styled","Link","MoviesDetails","useState","setData","status","setStatus","id","useParams","backLink","useLocation","state","from","useMemo","fetch","API","res","console","log","to","Suspense","fallback","API_KEY","axios","searchTrending","searchMovieId","reviewsMovie","searchMovieTitle","castMovie"],"sourceRoot":""}